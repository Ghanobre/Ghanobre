name: Testes Mobile com Robot

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  robot-tests:
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (Opcional, mas recomendado) Garante Python e libs no MESMO interpretador do job
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar dependências Python
        run: |
          python -m pip install -U pip
          python -m pip install robotframework robotframework-appiumlibrary Appium-Python-Client robotframework-pythonlibcore

      - name: Export env for job
        run: |
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_AVD_HOME=$HOME/.android/avd" >> $GITHUB_ENV
          echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$HOME/android-sdk/emulator:$HOME/.npm-global/bin:$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Start Android emulator (WSL safe + wait reforçado)
        shell: bash
        run: |
          nohup "$ANDROID_HOME/emulator/emulator" -avd test29 \
            -no-window -no-audio \
            -gpu swiftshader_indirect \
            -no-snapshot -wipe-data \
            -accel off \
            -no-boot-anim \
            >/tmp/emulator.log 2>&1 &

          adb start-server
          adb wait-for-device

          # Espera 1: boot concluído (3 sinais; timeout 10min)
          timeout 600 bash -c '
            until adb shell "getprop init.svc.bootanim | grep -q stopped" \
               || [ "$(adb shell getprop dev.bootcomplete 2>/dev/null | tr -d "\r")" = "1" ] \
               || [ "$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d "\r")" = "1" ]; do
              echo "aguardando boot (fase 1)..."
              sleep 3
            done
          '

          # Espera 2: serviços core do system_server (activity e package)
          timeout 300 bash -c '
            until adb shell "service list | grep -q '[[:space:]]activity:'" \
              && adb shell "service list | grep -q '[[:space:]]package:'"; do
              echo "aguardando serviços core (activity/package)..."
              sleep 2
            done
          '

          # Espera 3: tentar 'settings' (tolerante — se não aparecer, seguimos)
          timeout 120 bash -c '
            until adb shell "service list | grep -q '[[:space:]]settings:'"; do
              echo "aguardando serviço settings (tolerante)..."
              sleep 2
            done
          ' || echo "WARNING: serviço 'settings' não listado, seguindo assim mesmo."

          # Desbloquear e reduzir animações (não falha o job se der erro)
          adb shell input keyevent 82 || true
          adb shell settings put global window_animation_scale 0 || true
          adb shell settings put global transition_animation_scale 0 || true
          adb shell settings put global animator_duration_scale 0 || true

          echo "Emulador pronto!"
          # Sanity checks (não falham o job)
          adb shell getprop ro.build.version.release || true
          adb shell pm list packages | head -n 5 || true

      - name: Start Appium
        shell: bash
        run: |
          nohup appium --base-path /wd/hub --port 4723 >/tmp/appium.log 2>&1 &
          echo "Aguardando o Appium i
