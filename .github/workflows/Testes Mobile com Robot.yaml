name: Testes Mobile com Robot

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  robot-tests:
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Export env for job
        run: |
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_AVD_HOME=$HOME/.android/avd" >> $GITHUB_ENV
          echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$HOME/android-sdk/emulator:$HOME/.npm-global/bin:$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Start Android emulator (WSL safe + wait reforçado)
        shell: bash
        run: |
          nohup "$ANDROID_HOME/emulator/emulator" -avd test29 \
            -no-window -no-audio \
            -gpu swiftshader_indirect \
            -no-snapshot \
            -accel off \
            -no-boot-anim \
            >/tmp/emulator.log 2>&1 &

          adb start-server
          adb wait-for-device

          # Espera 1: boot concluído (3 sinais possíveis)
          timeout 600 bash -c '
            until adb shell "getprop init.svc.bootanim | grep -q stopped" \
               || [ "$(adb shell getprop dev.bootcomplete 2>/dev/null | tr -d "\r")" = "1" ] \
               || [ "$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d "\r")" = "1" ]; do
              echo "aguardando boot (fase 1)..."
              sleep 3
            done
          '

          # Espera 2: serviço 'settings' disponível (garante system_server ok)
          timeout 300 bash -c '
            until adb shell "cmd -l | grep -q ^settings$"; do
              echo "aguardando boot (serviço settings)..."
              sleep 2
            done
          '

          # Desbloquear e reduzir animações
          adb shell input keyevent 82 || true
          adb shell settings put global window_animation_scale 0 || true
          adb shell settings put global transition_animation_scale 0 || true
          adb shell settings put global animator_duration_scale 0 || true

          echo "Emulador pronto!"

      - name: Start Appium
        shell: bash
        run: |
          nohup appium --base-path /wd/hub --port 4723 >/tmp/appium.log 2>&1 &
          echo "Aguardando o Appium iniciar..."
          timeout 60 bash -c '
            until curl -s http://127.0.0.1:4723/wd/hub/status | grep -q "\"ready\": *true"; do
              echo "Esperando Appium..."
              sleep 2
            done
          '
          echo "Appium está rodando!"

      - name: Run Robot tests
        run: |
          mkdir -p results
          robot --timestampoutputs -d results tests/home.robot

      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: robot-results
          path: results/

      - name: Show logs
        if: always()
        run: |
          echo "=== emulator.log ==="; tail -n 200 /tmp/emulator.log || true
          echo "=== appium.log ==="; tail -n 200 /tmp/appium.log || true

      - name: Cleanup
        if: always()
        run: |
          pkill -f "appium" || true
          adb emu kill || true
          pkill -f "emulator-" || true
